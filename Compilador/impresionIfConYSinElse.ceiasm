.CODE
PUSH simple_heap_init
CALL
PUSH main_A_0
CALL
HALT

simple_heap_init:
	RET 0	; Retorna inmediatamente

simple_malloc:
	LOADFP	; Inicialización unidad
	LOADSP
	STOREFP	; Finaliza inicialización del RA
	LOADHL	; hl
	DUP	; hl
	PUSH 1	; 1
	ADD	; hl + 1
	STORE 4	; Guarda el resultado (un puntero a la primer celda de la región de memoria)
	LOAD 3	; Carga cantidad de celdas a alojar (parámetro que debe ser positivo)
	ADD
	STOREHL	; Mueve el heap limit (hl). Expande el heap
	STOREFP
	RET 1	; Retorna eliminando el parámetro

# Definición de la clase Object
.DATA
VT_Object:
DW 0
.CODE
Object_Object_1:
	LOADFP	; Guardo enlace dinámico
	LOADSP	; Inicializo FP
	STOREFP

	STOREFP	; Restablezco el contexto
	RET 1	; Retorno y libero espacio de los parametros del metodo y del THIS Object

# Definición de la clase System
.DATA
VT_System:
DW 0
.CODE
read_System_2:
	LOADFP	; Guardo enlace dinámico
	LOADSP	; Inicializo FP
	STOREFP

	READ
	PUSH 48
	SUB
	STORE 3
	STOREFP
	RET 0
	STOREFP	; Restablezco el contexto
	RET 0	; Retorno y libero espacio de los parametros del metodo read
printB_System_3:
	LOADFP	; Guardo enlace dinámico
	LOADSP	; Inicializo FP
	STOREFP

	LOAD 3
	BPRINT
	STOREFP	; Restablezco el contexto
	RET 1	; Retorno y libero espacio de los parametros del metodo printB
printC_System_4:
	LOADFP	; Guardo enlace dinámico
	LOADSP	; Inicializo FP
	STOREFP

	LOAD 3
	CPRINT
	STOREFP	; Restablezco el contexto
	RET 1	; Retorno y libero espacio de los parametros del metodo printC
printI_System_5:
	LOADFP	; Guardo enlace dinámico
	LOADSP	; Inicializo FP
	STOREFP

	LOAD 3
	IPRINT
	STOREFP	; Restablezco el contexto
	RET 1	; Retorno y libero espacio de los parametros del metodo printI
printS_System_6:
	LOADFP	; Guardo enlace dinámico
	LOADSP	; Inicializo FP
	STOREFP

	LOAD 3
	SPRINT
	STOREFP	; Restablezco el contexto
	RET 1	; Retorno y libero espacio de los parametros del metodo printS
println_System_7:
	LOADFP	; Guardo enlace dinámico
	LOADSP	; Inicializo FP
	STOREFP

	PRNLN
	STOREFP	; Restablezco el contexto
	RET 0	; Retorno y libero espacio de los parametros del metodo println
printBln_System_8:
	LOADFP	; Guardo enlace dinámico
	LOADSP	; Inicializo FP
	STOREFP

	LOAD 3
	BPRINT
	PRNLN
	STOREFP	; Restablezco el contexto
	RET 1	; Retorno y libero espacio de los parametros del metodo printBln
printCln_System_9:
	LOADFP	; Guardo enlace dinámico
	LOADSP	; Inicializo FP
	STOREFP

	LOAD 3
	CPRINT
	PRNLN
	STOREFP	; Restablezco el contexto
	RET 1	; Retorno y libero espacio de los parametros del metodo printCln
printIln_System_10:
	LOADFP	; Guardo enlace dinámico
	LOADSP	; Inicializo FP
	STOREFP

	LOAD 3
	IPRINT
	PRNLN
	STOREFP	; Restablezco el contexto
	RET 1	; Retorno y libero espacio de los parametros del metodo printIln
printSln_System_11:
	LOADFP	; Guardo enlace dinámico
	LOADSP	; Inicializo FP
	STOREFP

	LOAD 3
	SPRINT
	PRNLN
	STOREFP	; Restablezco el contexto
	RET 1	; Retorno y libero espacio de los parametros del metodo printSln
System_System_12:
	LOADFP	; Guardo enlace dinámico
	LOADSP	; Inicializo FP
	STOREFP

	STOREFP	; Restablezco el contexto
	RET 1	; Retorno y libero espacio de los parametros del metodo y del THIS System

# Definición de la clase A
.DATA
VT_A:
DW 0
.CODE
main_A_0:
	LOADFP	; Guardo enlace dinámico
	LOADSP	; Inicializo FP
	STOREFP

	RMEM 0	; Reservo espacio para vars locales
	PUSH 5	; Apilo literal entero 5
	PUSH 3	; Apilo literal entero 3
	GT	; Mayor
	BF else14
.DATA
string15: DW "Correcto if 1 (then)",0
.CODE
	PUSH string15	; Apilo etiqueta del String
	PUSH printSln_System_11	; Apilo la etiqueta del metodo
	CALL	; Llamo al metodo
	JUMP finIf13
else14:NOP
.DATA
string16: DW "Incorrecto",0
.CODE
	PUSH string16	; Apilo etiqueta del String
	PUSH printSln_System_11	; Apilo la etiqueta del metodo
	CALL	; Llamo al metodo
finIf13:NOP
	PUSH 3	; Apilo literal entero 3
	PUSH 5	; Apilo literal entero 5
	GT	; Mayor
	BF else18
.DATA
string19: DW "Incorrecto",0
.CODE
	PUSH string19	; Apilo etiqueta del String
	PUSH printSln_System_11	; Apilo la etiqueta del metodo
	CALL	; Llamo al metodo
	JUMP finIf17
else18:NOP
.DATA
string20: DW "Correcto if 2 (else)",0
.CODE
	PUSH string20	; Apilo etiqueta del String
	PUSH printSln_System_11	; Apilo la etiqueta del metodo
	CALL	; Llamo al metodo
finIf17:NOP
	PUSH 5	; Apilo literal entero 5
	PUSH 3	; Apilo literal entero 3
	GT	; Mayor
	BF else22
.DATA
string23: DW "Correcto if 3 (then)",0
.CODE
	PUSH string23	; Apilo etiqueta del String
	PUSH printSln_System_11	; Apilo la etiqueta del metodo
	CALL	; Llamo al metodo
	JUMP finIf21
else22:NOP
finIf21:NOP
	PUSH 3	; Apilo literal entero 3
	PUSH 5	; Apilo literal entero 5
	GT	; Mayor
	BF else25
.DATA
string26: DW "Incorrecto if 4",0
.CODE
	PUSH string26	; Apilo etiqueta del String
	PUSH printSln_System_11	; Apilo la etiqueta del metodo
	CALL	; Llamo al metodo
	JUMP finIf24
else25:NOP
finIf24:NOP
	PUSH 3	; Apilo literal entero 3
	NEG
	PUSH 0	; Apilo literal entero 0
	LT	; Menor
	BF else28
.DATA
string29: DW "Correcto if 5 (then)",0
.CODE
	PUSH string29	; Apilo etiqueta del String
	PUSH printSln_System_11	; Apilo la etiqueta del metodo
	CALL	; Llamo al metodo
	JUMP finIf27
else28:NOP
finIf27:NOP
	FMEM 0 # Libero espacio de variables locales al bloque
	STOREFP	; Restablezco el contexto
	RET 0	; Retorno y libero espacio de los parametros del metodo main
A_A_30:
	LOADFP	; Guardo enlace dinámico
	LOADSP	; Inicializo FP
	STOREFP

	STOREFP	; Restablezco el contexto
	RET 1	; Retorno y libero espacio de los parametros del metodo y del THIS A

